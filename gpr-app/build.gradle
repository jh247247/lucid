apply plugin: 'com.android.application'
apply plugin: 'android-command'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.getkeepsafe.dexcount'


def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))

android {
  compileSdkVersion 23
  buildToolsVersion "23"

  defaultConfig {
    buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
    buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

    minSdkVersion 11
    targetSdkVersion 23
    versionCode 1
    versionName "1.0"
  }

  buildTypes {
    release {
      debuggable false
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
    }

    debug {
      debuggable true
      applicationIdSuffix ".debug"
      versionNameSuffix "-debug"
    }
  }

  lintOptions {
    disable 'InvalidPackage'
    abortOnError false
  }

  dexOptions {
    preDexLibraries = true
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }
}

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'com.novoda:gradle-android-command-plugin:1.4.0'
    classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.3.1'
  }
}

repositories {
  mavenCentral()
  jcenter()
  maven { url "https://jitpack.io" }
}

dependencies {

  // material dialogs
  compile('com.github.afollestad.material-dialogs:core:0.8.5.1@aar') {
    transitive = true
  }

  compile('com.github.afollestad.material-dialogs:commons:0.8.5.1@aar') {
    transitive = true
  }

  // Butterknife for view injection
  compile 'com.jakewharton:butterknife:7.0.1'

  // Guava for fancy utils
  compile 'com.google.guava:guava:18.0'
  compile 'com.google.code.findbugs:jsr305:3.0.0'

  compile project(':gpr-lib')

  // Support Libraries
  compile 'com.android.support:appcompat-v7:23.0.0'
  compile 'com.android.support:support-annotations:23.0.0'
  compile 'com.android.support:support-v4:23.0.0'

  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

  compile 'com.annimon:stream:1.0.5'

  compile 'io.reactivex:rxandroid:1.1.0'

  compile 'io.reactivex:rxjava:1.1.0'

  compile fileTree(dir: 'libs', include: ['*.jar'])
}

configurations {
  umljavadoc
}

dependencies {
  umljavadoc 'org.umlgraph:umlgraph:5.6'
}

//
// While javadoc is not typically dependent on compilation, the compile steps
// sometimes generate some sources that we wish to have in the Javadoc.
//
task javadoc(overwrite: true, dependsOn: build) {
  setDescription('Generates Javadoc API documentation with UMLGraph diagrams')
  setGroup(JavaBasePlugin.DOCUMENTATION_GROUP)

  doLast {
    def javaFilePath = file('src/main/java')
    if (javaFilePath.exists())
                    {
                      ant.javadoc(classpath: "/opt/android/sdk/platforms/android-23/android.jar",
                      sourcepath: file('src/main/java'),
                      packagenames: '*',
                      destdir: "../javadoc",
                                  private: 'true',
                      docletpath: configurations.umljavadoc.asPath,
                      charset: 'UTF-8',
                      encoding: 'UTF-8',
                      docencoding: 'UTF-8') {
                        doclet(name: 'org.umlgraph.doclet.UmlGraphDoc')
                        {
                          param(name: '-nodefontsize', value: '9')
                          param(name: '-nodefontpackagesize', value: '7')
                          param(name: '-qualify')
                          param(name: '-postfixpackage')
                          param(name: '-hide', value: 'java.*')
                          param(name: '-collpackages', value: 'java.util.*')
                          param(name: '-inferrel')
                          param(name: '-inferdep')
                          param(name: '-link', value: 'http://java.sun.com/j2se/1.5.0/docs/guide/javadoc/doclet/spec')
                          param(name: '-link', value: 'http://java.sun.com/j2se/1.5/docs/api')
                        }
                      }
                    }
                    else
                    {
                      print("!!! Cannot find source path !!!");
                    }
  }
}